{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Installation Make sure Composer is installed globally, as explained in the installation chapter of the Composer documentation. Installation with Symfony Flex Add our recipes endpoint { \"extra\": { \"symfony\": { \"endpoint\": [ \"https://api.github.com/repos/Enabel/recipes/contents/index.json?ref=flex/main\", \"flex://defaults\" ], \"allow-contrib\": true } } } Don't forget to run compose update as you have just modified his configuration. Install with composer composer require enabel/partner-countries-bundle Setup database bin/console make:migration bin/console doctrine:migration:migrate Installation without Symfony Flex Step 1: Download the Bundle Open a command console, enter your project directory and execute the following command to download the latest stable version of this bundle: composer require enabel/partner-countries-bundle Step 2: Enable the Bundle Then, enable the bundle by adding it to the list of registered bundles in the config/bundles.php file of your project: // config/bundles.php return [ // ... Enabel\\PartnerCountriesBundle\\EnabelPartnerCountriesBundle::class => ['all' => true], ]; Step 3: Import routing configuration enable the routes by adding it to the list of registered routes in the config/routes.yaml file of your project: # config/routes.yaml enabel_partner_countries: resource: \"@EnabelPartnerCountriesBundle/config/routes.yaml\" Step 4: Create the configuration Create a file /config/packages/enabel_partner_countries.yaml with this content: enabel_partner_countries: country_class: 'App\\Entity\\Enabel\\Country' country_repository: 'App\\Repository\\Enabel\\CountryRepository' Step 5: Create entity & repository Create a entity and repository that extends the bundle one. The Country entity /src/Entity/Enabel/Country.php <?php declare(strict_types=1); namespace App\\Entity\\Enabel; use App\\Repository\\Enabel\\CountryRepository; use Doctrine\\ORM\\Mapping as ORM; use Enabel\\PartnerCountriesBundle\\Entity\\Country as BaseCountry; #[ORM\\Entity(repositoryClass: CountryRepository::class)] class Country extends BaseCountry { } The according repository /src/Repository/Enabel/CountryRepository.php <?php declare(strict_types=1); namespace App\\Repository\\Enabel; use App\\Entity\\Enabel\\Country; use Doctrine\\Persistence\\ManagerRegistry; use Enabel\\PartnerCountriesBundle\\Repository\\CountryRepository as BaseCountryRepository; /** * @method Country|null find($id, $lockMode = null, $lockVersion = null) * @method Country|null findOneBy(array $criteria, array $orderBy = null) * @method array<Country> findAll() * @method array<Country> findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null) */ class CountryRepository extends BaseCountryRepository { public function __construct(ManagerRegistry $registry) { parent::__construct($registry, Country::class); } } Step 6: Create the admin crud controller Create a easyadmin crud controller that extends the bundle one. To manage partner countries /src/Controller/Admin/Enabel/CountryCrudController.php <?php declare(strict_types=1); namespace App\\Controller\\Admin\\Enabel; use App\\Entity\\Enabel\\Country; use Enabel\\PartnerCountriesBundle\\Controller\\Admin\\CountryCrudController as BaseCountryCrudController; class CountryCrudController extends BaseCountryCrudController { public static function getEntityFqcn(): string { return Country::class; } } Step 7: Setup the database bin/console make:migration bin/console doctrine:migration:migrate Usage Easyadmin To manage partner countries in your Easyadmin dashboard follow these instructions Command This bundle come with a bunch of commands, here is the documentation Twig This bundle come with a bunch of twig filters, here is the documentation","title":"Installation"},{"location":"#installation","text":"Make sure Composer is installed globally, as explained in the installation chapter of the Composer documentation.","title":"Installation"},{"location":"#installation-with-symfony-flex","text":"Add our recipes endpoint { \"extra\": { \"symfony\": { \"endpoint\": [ \"https://api.github.com/repos/Enabel/recipes/contents/index.json?ref=flex/main\", \"flex://defaults\" ], \"allow-contrib\": true } } } Don't forget to run compose update as you have just modified his configuration. Install with composer composer require enabel/partner-countries-bundle","title":"Installation with Symfony Flex"},{"location":"#setup-database","text":"bin/console make:migration bin/console doctrine:migration:migrate","title":"Setup database"},{"location":"#installation-without-symfony-flex","text":"","title":"Installation without Symfony Flex"},{"location":"#step-1-download-the-bundle","text":"Open a command console, enter your project directory and execute the following command to download the latest stable version of this bundle: composer require enabel/partner-countries-bundle","title":"Step 1: Download the Bundle"},{"location":"#step-2-enable-the-bundle","text":"Then, enable the bundle by adding it to the list of registered bundles in the config/bundles.php file of your project: // config/bundles.php return [ // ... Enabel\\PartnerCountriesBundle\\EnabelPartnerCountriesBundle::class => ['all' => true], ];","title":"Step 2: Enable the Bundle"},{"location":"#step-3-import-routing-configuration","text":"enable the routes by adding it to the list of registered routes in the config/routes.yaml file of your project: # config/routes.yaml enabel_partner_countries: resource: \"@EnabelPartnerCountriesBundle/config/routes.yaml\"","title":"Step 3: Import routing configuration"},{"location":"#step-4-create-the-configuration","text":"Create a file /config/packages/enabel_partner_countries.yaml with this content: enabel_partner_countries: country_class: 'App\\Entity\\Enabel\\Country' country_repository: 'App\\Repository\\Enabel\\CountryRepository'","title":"Step 4: Create the configuration"},{"location":"#step-5-create-entity-repository","text":"Create a entity and repository that extends the bundle one. The Country entity /src/Entity/Enabel/Country.php <?php declare(strict_types=1); namespace App\\Entity\\Enabel; use App\\Repository\\Enabel\\CountryRepository; use Doctrine\\ORM\\Mapping as ORM; use Enabel\\PartnerCountriesBundle\\Entity\\Country as BaseCountry; #[ORM\\Entity(repositoryClass: CountryRepository::class)] class Country extends BaseCountry { } The according repository /src/Repository/Enabel/CountryRepository.php <?php declare(strict_types=1); namespace App\\Repository\\Enabel; use App\\Entity\\Enabel\\Country; use Doctrine\\Persistence\\ManagerRegistry; use Enabel\\PartnerCountriesBundle\\Repository\\CountryRepository as BaseCountryRepository; /** * @method Country|null find($id, $lockMode = null, $lockVersion = null) * @method Country|null findOneBy(array $criteria, array $orderBy = null) * @method array<Country> findAll() * @method array<Country> findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null) */ class CountryRepository extends BaseCountryRepository { public function __construct(ManagerRegistry $registry) { parent::__construct($registry, Country::class); } }","title":"Step 5: Create entity &amp; repository"},{"location":"#step-6-create-the-admin-crud-controller","text":"Create a easyadmin crud controller that extends the bundle one. To manage partner countries /src/Controller/Admin/Enabel/CountryCrudController.php <?php declare(strict_types=1); namespace App\\Controller\\Admin\\Enabel; use App\\Entity\\Enabel\\Country; use Enabel\\PartnerCountriesBundle\\Controller\\Admin\\CountryCrudController as BaseCountryCrudController; class CountryCrudController extends BaseCountryCrudController { public static function getEntityFqcn(): string { return Country::class; } }","title":"Step 6: Create the admin crud controller"},{"location":"#step-7-setup-the-database","text":"bin/console make:migration bin/console doctrine:migration:migrate","title":"Step 7: Setup the database"},{"location":"#usage","text":"","title":"Usage"},{"location":"#easyadmin","text":"To manage partner countries in your Easyadmin dashboard follow these instructions","title":"Easyadmin"},{"location":"#command","text":"This bundle come with a bunch of commands, here is the documentation","title":"Command"},{"location":"#twig","text":"This bundle come with a bunch of twig filters, here is the documentation","title":"Twig"},{"location":"command/","text":"Commands Sync partner countries The enabel:partner-countries:sync command sync the data of the partner countries table from Symfony's Intl\\Country component. Usage bin/console enabel:partner-countries:sync Details This command fetches country data from the Symfony Intl\\Country component and updated it into the partner countries table. It ensures that your application has a consistent, up-to-date list of countries based on international standards. Notes Ensure your database connection is correctly configured before running this command. Make sure the bundle is appropriately configured.","title":"Command"},{"location":"command/#commands","text":"","title":"Commands"},{"location":"command/#sync-partner-countries","text":"The enabel:partner-countries:sync command sync the data of the partner countries table from Symfony's Intl\\Country component.","title":"Sync partner countries"},{"location":"command/#usage","text":"bin/console enabel:partner-countries:sync","title":"Usage"},{"location":"command/#details","text":"This command fetches country data from the Symfony Intl\\Country component and updated it into the partner countries table. It ensures that your application has a consistent, up-to-date list of countries based on international standards.","title":"Details"},{"location":"command/#notes","text":"Ensure your database connection is correctly configured before running this command. Make sure the bundle is appropriately configured.","title":"Notes"},{"location":"easyadmin/","text":"Manage partner countries in your Easyadmin dashboard Go to your dashboard controller, example : src/Controller/Admin/DashboardController.php <?php namespace App\\Controller\\Admin; ... use Enabel\\PartnerCountriesBundle\\Controller\\Admin\\CountryTrait; class DashboardController extends AbstractDashboardController { ... use CountryTrait; ... public function configureMenuItems(): iterable { ... yield from $this->countryMenuEntry(); ... This extra menu entry will allow you to manage your partner countries in your Easyadmin dashboard. You need to have the permission ROLE_ADMIN_PARTNER_COUNTRIES to access this page.","title":"EasyAdmin"},{"location":"easyadmin/#manage-partner-countries-in-your-easyadmin-dashboard","text":"Go to your dashboard controller, example : src/Controller/Admin/DashboardController.php <?php namespace App\\Controller\\Admin; ... use Enabel\\PartnerCountriesBundle\\Controller\\Admin\\CountryTrait; class DashboardController extends AbstractDashboardController { ... use CountryTrait; ... public function configureMenuItems(): iterable { ... yield from $this->countryMenuEntry(); ... This extra menu entry will allow you to manage your partner countries in your Easyadmin dashboard. You need to have the permission ROLE_ADMIN_PARTNER_COUNTRIES to access this page.","title":"Manage partner countries in your Easyadmin dashboard"},{"location":"twig/","text":"Twig Country extensions This extension provides a set of Twig filters to work with countries. Filters country_icon Returns the country icon from flag-icons . {{ country|country_icon }} country_icon_with_name Returns the country icon from flag-icons with the country name. {{ country|country_icon_with_name }}","title":"Twig"},{"location":"twig/#twig","text":"","title":"Twig"},{"location":"twig/#country-extensions","text":"This extension provides a set of Twig filters to work with countries.","title":"Country extensions"},{"location":"twig/#filters","text":"","title":"Filters"},{"location":"twig/#country_icon","text":"Returns the country icon from flag-icons . {{ country|country_icon }}","title":"country_icon"},{"location":"twig/#country_icon_with_name","text":"Returns the country icon from flag-icons with the country name. {{ country|country_icon_with_name }}","title":"country_icon_with_name"}]}